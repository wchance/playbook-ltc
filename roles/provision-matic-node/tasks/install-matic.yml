---

# tasks file for heimdall
- name: Clone the Heimdall
  git:
    repo: "https://github.com/maticnetwork/heimdall.git"
    dest: "{{ root_dir }}/heimdall"
    force: yes
    version: "{{ heimdall_branch }}"

- name: Build heimdall
  command: chdir={{ root_dir }}/heimdall make install network={{ heimdall_network }}

- name: Creating symlink for heimdalld
  file:
    src: "/root/go/bin/heimdalld"
    dest: "/usr/bin/heimdalld"
    state: link
  become: true

- name: Creating symlink for heimdallcli
  file:
    src: "/root/go/bin/heimdallcli"
    dest: "/usr/bin/heimdallcli"
    state: link
  become: true

# tasks file for bor
- name: Cloning the Bor repository
  git:
    repo: "https://github.com/maticnetwork/bor.git"
    dest: "{{ root_dir }}/bor"
    force: yes
    version: "{{ bor_branch }}"

- name: Build Bor
  command: chdir={{ root_dir }}/bor make bor-all

- name: Creating symlink for bor
  file:
    src: "{{ root_dir }}/bor/build/bin/bor"
    dest: "/usr/bin/bor"
    state: link
  become: true

- name: Creating symlink for bootnode
  file:
    src: "{{ root_dir }}/bor/build/bin/bootnode"
    dest: "/usr/bin/bootnode"
    state: link
  become: true

# Tasks to clean current setup
- name: Check if data directories exist
  stat:
    path: "{{ root_dir }}/.heimdalld/data"
  register: dir_to_check

- name: Add fail mechanism
  fail:
    msg: "Data directories already exist. To start fresh, use cleaner-matic.yml first and then execute setup again."
  failed_when: dir_to_check.stat.exists and dir_to_check.stat.isdir

# Tasks to setup network
- name: Fetch node files
  git:
    repo: "https://{{ network_launch_repository }}.git"
    dest: "{{ root_dir }}/launch"
    recursive: false
    version: "{{ network_launch_branch }}"

- name: Setup node directory
  command: cp -rf {{ root_dir }}/launch/{{ network_version }}/{{ node_type }} {{ root_dir }}/node

- name: Setup Heidmall
  shell: |
    mkdir {{ root_dir }}/.heimdalld
    cd {{ root_dir }}/node/heimdall
    heimdalld init --home {{ root_dir }}/.heimdalld/
    cp -rf {{ root_dir }}/node/heimdall/config/genesis.json {{ root_dir }}/.heimdalld/config/
    echo "Setup done!"

- name: Setup Bor
  shell: |
    mkdir {{ root_dir }}/.bor
    cd {{ root_dir }}/node/bor
    mkdir -p {{ root_dir }}/.bor {{ root_dir }}/.bor/keystore
    bor --datadir {{ root_dir }}/.bor/data init ./genesis.json
    cp ./static-nodes.json {{ root_dir }}/.bor/data/bor/static-nodes.json
    if [ ! -f "{{ root_dir }}/nodekey" ]; then bootnode -genkey "{{ root_dir }}/nodekey"; fi;
    cp {{ root_dir }}/nodekey {{ root_dir }}/.bor/data/bor/
    echo "Setup done!"

- name: Generate service files
  command: "chdir={{ root_dir }}/launch/{{ network_version }} {{ item }}"
  with_items:
    - bash service.sh

# Fix paths/params
- name: Replace path for bor start.sh
  shell: sed -i 's|${BOR_DIR:-~/.bor}|{{ root_dir }}|g' {{ root_dir }}/node/bor/start.sh

- name: Add bootnode param
  shell: sed -i 's|--metrics|--bootnodes "enode://0cb82b395094ee4a2915e9714894627de9ed8498fb881cec6db7c65e8b9a5bd7f2f25cc84e71e89d0947e51c76e85d0847de848c7782b13c0255247a6758178c@44.232.55.71:30303,enode://88116f4295f5a31538ae409e4d44ad40d22e44ee9342869e7d68bdec55b0f83c1530355ce8b41fbec0928a7d75a5745d528450d30aec92066ab6ba1ee351d710@159.203.9.164:30303"|g' {{ root_dir }}/node/bor/start.sh 

- name: Add seeds param
  shell: sed -i 's|seeds = ""|seeds = "f4f605d60b8ffaaf15240564e58a81103510631c@159.203.9.164:26656,4fb1bc820088764a564d4f66bba1963d47d82329@44.232.55.71:26656"|g' {{ root_dir }}/.heimdalld/config/config.toml

- name: Replace path for heimdall.service
  shell: sed -i 's|/root/node|{{ root_dir }}/node|g' {{ root_dir }}/launch/{{ network_version }}/heimdalld.service

- name: Specify data dir (heimdalld)
  shell: sed -i 's|/root/go/bin/heimdalld start|heimdalld start --home={{ root_dir }}/.heimdalld|g' {{ root_dir }}/launch/{{ network_version }}/heimdalld.service

- name: Specify data dir (heimdalld-rest-server)
  shell: sed -i 's|/root/go/bin/heimdalld rest-server|heimdalld rest-server --home={{ root_dir }}/.heimdalld|g' {{ root_dir }}/launch/{{ network_version }}/heimdalld-rest-server.service

- name: Replace path for bor.service
  shell: sed -i 's|/root/node|{{ root_dir }}/node|g' {{ root_dir }}/launch/{{ network_version }}/bor.service

- name: Replace path for heimdalld-rest-server.service
  shell: sed -i 's|/root/node|{{ root_dir }}/node|g' {{ root_dir }}/launch/{{ network_version }}/heimdalld-rest-server.service

# Tasks to setup services
- name: Setup Heimdall service
  copy:
    src: "{{ root_dir }}/launch/{{ network_version }}/heimdalld.service"
    dest: /etc/systemd/system/heimdalld.service
    mode: "0755"
    remote_src: true
  become: true

- name: Setup Heimdall rest service
  copy:
    src: "{{ root_dir }}/launch/{{ network_version }}/heimdalld-rest-server.service"
    dest: /etc/systemd/system/heimdalld-rest-server.service
    mode: "0755"
    remote_src: true
  become: true

- name: Setup Bor service
  copy:
    src: "{{ root_dir }}/launch/{{ network_version }}/bor.service"
    dest: /etc/systemd/system/bor.service
    mode: "0755"
    remote_src: true
  become: true

- name: Create /etc/matic directory
  file:
    path: /etc/matic
    state: directory
  become: true

- name: Check if metadata exists
  stat:
    path: /etc/matic/metadata
  register: metadata_to_check

- name: Setup metadata file
  copy:
    src: "{{ root_dir }}/launch/{{ network_version }}/metadata"
    dest: /etc/matic/metadata
    mode: "0755"
    remote_src: true
  become: true
  when: metadata_to_check.stat.exists == False

- name: restart heimdalld
  systemd:
    name: heimdalld.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes

- name: restart heimdalld-rest-server
  systemd:
    name: heimdalld-rest-server.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes

- name: restart bor
  systemd:
    name: bor.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes
