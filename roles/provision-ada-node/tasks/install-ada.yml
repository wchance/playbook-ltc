---
- name: Install ghcup
  shell: (mkdir -p ~/.ghcup/bin && curl https://gitlab.haskell.org/haskell/ghcup/raw/master/ghcup > ~/.ghcup/bin/ghcup && chmod +x ~/.ghcup/bin/ghcup) && echo "Success"
  become: false

- name: Configure PATH
  ansible.builtin.template:
    src: path-assigner.j2
    dest: /tmp/path-assigner.sh
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    remote_src: no

- name: Add path (ghcup)
  shell: /bin/bash /tmp/path-assigner.sh
  become: false

- name: Configure ghcup
  ansible.builtin.template:
    src: ghcup-installer.j2
    dest: /tmp/ghcup-installer.sh
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    remote_src: no

- name: Install ghcup packages
  shell: /bin/bash /tmp/ghcup-installer.sh
  become: false

- name: Create binary directory
  ansible.builtin.file:
    path: "{{ root_dir }}/.local/bin"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes

- name: Download config files
  ansible.builtin.template:
    src: mainnet-config.j2
    dest: "/tmp/mainnet-config.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    remote_src: no

- name: Configure systemd
  ansible.builtin.template:
    src: cardano-systemd-config.j2
    dest: /etc/systemd/system/cardano.service
    owner: root
    group: root
    remote_src: no

- name: Configure systemd (symlink)
  ansible.builtin.file:
    src: /etc/systemd/system/cardano.service
    dest: /etc/systemd/system/multi-user.target.wants/cardano.service
    owner: root
    group: root
    state: link

- name: Setup config
  shell: /bin/bash /tmp/mainnet-config.sh
  args:
    executable: /bin/bash
  become: false
  async: 60
  poll: 0

- name: Download binary
  shell: |
    mkdir /tmp/binary
    cd /tmp/binary
    wget https://hydra.iohk.io/build/9941151/download/1/cardano-node-{{ cardano_version }}-linux.tar.gz
    tar -xvf cardano-node-{{ cardano_version }}-linux.tar.gz
    cp cardano-node {{ root_dir }}/.local/bin
    cp cardano-cli {{ root_dir }}/.local/bin
    rm -rf /tmp/binary
  args:
    executable: /bin/bash
  become: false

- name: Run cardano service
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: cardano.service
