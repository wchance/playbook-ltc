---

- name: "create user electrumx"
  user:
    name: electrumx
    password: electrumx
    shell: /bin/bash
    groups: sudo
    create_home: no

- name: "create folders electrumX"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0775'
    recurse: yes 
  loop:
    - "{{ folder_electrumx }}"
    - "{{ folder_electrumx }}db"
    - "{{ folder_electrumx }}service"
    - "{{ folder_electrumx }}scripts"
    - "{{ folder_electrumx }}scripts/electrumx"
    - "{{ folder_electrumx }}logs"
    - "{{ folder_electrumx }}certs"
    - /etc/electrumx

- name: "git pull repo electrumX"
  git:
    #repo: "https://github.com/kyuupichan/electrumx.git"
    repo: "https://github.com/spesmilo/electrumx.git"
    dest: "{{ folder_electrumx }}"
    force: yes
  become_user: electrumx
    
- name: "copy requirements.txt to {{ folder_electrumx }}script/electrumx/"
  template:
    src: requirements.txt
    dest: "{{ folder_electrumx }}"

- name: "create python virtualenv in {{ folder_electrumx }}/electrumXenv"
  pip:
    requirements: "{{ folder_electrumx }}/requirements.txt"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv

- name: "remove package attr/attrs"
  pip:
    name: "{{ item }}"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv
    state: absent
  loop:
    - attr
    - attrs

- name: "reinstall package attrs in the python virtualenv"
  pip:
    name: "{{ item }}"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv
  loop:
    - attrs
    - aiorpcx

- name: "check if ssl exist"
  stat:
    path: "{{ folder_electrumx }}certs/cert.pem"
  register: ssl_cert
  
- name: "create ssl cert/key"
  shell: |
    cd "{{ folder_electrumx }}"certs
    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 \
      -days 999 -nodes -subj "/C=US/ST=Florida/L=Stockholm/O=.../OU=.../CN=.../emailAddress=..."
  become: yes
  when: not ssl_cert.stat.exists
  
- name: "execution python script"
  shell: "cd {{ folder_electrumx }} && source electrumXenv/bin/activate && electrumXenv/bin/python3 setup.py install"
  args:
    executable: /bin/bash
  register : execute_script

- fail:   
   msg: "script {{ folder_electrumx }}/setup.py not correctly finished, aborting!"
  when: execute_script.stdout_lines is not search ('Finished processing dependencies')

- name: "copy electrumx.conf to /etc/electrum/electrumx.conf"
  template:
    src: electrumx.conf
    dest: /etc/electrumx/electrumx.conf

- name: "copy electrumx.service to /etc/systemd/system/electrumx.service"
  template:
    src: electrumx.service
    dest: /etc/systemd/system/electrumx.service

- name: "enable service electrumx.service"
  service: 
    name: electrumx.service
    enabled: yes
    state: restarted

- name: "get status of service electrumx.service"
  shell: "service electrumx status | grep Active | awk '{print $2}'"
  register: electrumx_status

- fail: 
   msg: "service electrumx is not started, check ur conf file: /etc/electrumx/electrumx.conf"
  when: electrumx_status.stdout == "failed"

- name: "copy {{ folder_electrumx }}/contrib/daemontools/* to {{ folder_electrumx }}script/electrumxscript/electrumx"
  shell: "cp -R {{ folder_electrumx }}/contrib/daemontools/* {{ folder_electrumx }}scripts/electrumx/"

- name: "replace USERNAME ENV files {{ folder_electrumx }}scripts/electrumx/env/USERNAME with good values"
  template:
    src: USERNAME_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/USERNAME"

- name: "replace DAEMON_URL ENV files {{ folder_electrumx }}scripts/electrumx/env/DAEMON_URL with good values"
  template:
    src: DAEMON_URL_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/DAEMON_URL"

- name: "replace DB_DIRECTORY ENV files {{ folder_electrumx }}scripts/electrumx/env/DB_DIRECTORY with good values"
  template:
    src: DB_DIRECTORY_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/DB_DIRECTORY"

- name: "replace ELECTRUMX ENV files {{ folder_electrumx }}scripts/electrumx/env/ELECTRUMX with good values"
  template:
    src: ELECTRUMX_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/ELECTRUMX"

- name: "replace COIN ENV files {{ folder_electrumx }}scripts/electrumx/env/COIN with good values"
  template:
    src: COIN_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/COIN"

- name: "replace NET ENV files {{ folder_electrumx }}scripts/electrumx/env/COIN with good values"
  template:
    src: NET_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/env/NET"

- name: "replace LOG_RUN ENV files {{ folder_electrumx }}scripts/electrumx/log/run with good values"
  template:
    src: LOG_RUN_dont_touch
    dest: "{{ folder_electrumx }}scripts/electrumx/log/run"

- name: "create symlink {{ folder_electrumx }}scripts/electrumx to {{ folder_electrumx }}services/"
  file:
    src: "{{ folder_electrumx }}scripts/electrumx"
    dest: "{{ folder_electrumx }}service/electrumx"
    state: link

- name: Change file ownership, group and permissions
  file:
    path: /home/electrumx/
    owner: electrumx
    group: electrumx
    mode: '0755'
    recurse: yes

- name: "start svscan and get the process pid"
  shell: "cd {{ folder_electrumx }}service/ && svscan & disown"
  args:  
    executable: /bin/bash
  become: yes
  become_user: electrumx
  register: svscan_cmd
