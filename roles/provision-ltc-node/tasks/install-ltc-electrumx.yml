---

- name: "create folders electrumX"
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ folder_electrumx }}"
    - "{{ folder_electrumx }}db"
    - "{{ folder_electrumx }}service"
    - "{{ folder_electrumx }}scripts"
    - "{{ folder_electrumx }}scripts/electrumx"
    - "{{ folder_electrumx }}logs"
    - "{{ folder_electrumx }}certs"
    - /etc/electrumx

- name: "git pull repo electrumX"
  git:
    repo: "https://github.com/kyuupichan/electrumx.git"
    dest: "{{ folder_electrumx }}"

- name: "create python virtualenv in {{ folder_electrumx }}/electrumXenv"
  pip:
    requirements: "{{ folder_electrumx }}/requirements.txt"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv

- name: "remove package attr/attrs"
  pip:
    name: "{{ item }}"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv
    state: absent
  loop:
    - attr
    - attrs

- name: "reinstall package attrs in the python virtualenv"
  pip:
    name: "{{ item }}"
    virtualenv: "{{ folder_electrumx }}/electrumXenv"
    virtualenv_command: /usr/bin/python3 -m venv
  loop:
    - attrs
    - aiorpcx
  
- name: "execution python script"
  shell: "cd {{ folder_electrumx }} && source electrumXenv/bin/activate && electrumXenv/bin/python3 setup.py install"
  args:
    executable: /bin/bash
  register : execute_script

- fail:   
   msg: "script {{ folder_electrumx }}/setup.py not correctly finished, aborting!"
  when: execute_script.stdout_lines is not search ('Finished processing dependencies for electrumX')

- name: "copy electrumx.conf to /etc/electrum/electrumx.conf"
  template:
    src: electrumx.conf
    dest: /etc/electrumx/electrumx.conf

- name: "copy electrumx.service to /etc/systemd/system/electrumx.service"
  template:
    src: electrumx.service
    dest: /etc/systemd/system/electrumx.service

- name: "enable service electrumx.service"
  service: 
    name: electrumx.service
    enabled: yes
    state: restarted
 
- name: "get status of service electrumx.service"
  shell: "service electrumx status | grep Active | awk '{print $2}'"
  register: electrumx_status

- fail: 
   msg: "service electrumx is not started, check ur conf file: /etc/electrumx/electrumx.conf"
  when: electrumx_status.stdout == "failed"

- name: "copy {{ folder_electrumx }}/contrib/daemontools/* to /src/electrumxscript/electrumxscript/electrumx"
  shell: "cp -R {{ folder_electrumx }}/contrib/daemontools/* /srv/electrumxscripts/electrumx/"

- name: "replace USERNAME ENV files /srv/electrumxscripts/electrumx/env/USERNAME with good values"
  template:
    src: USERNAME_dont_touch
    dest: "/srv/electrumxscripts/electrumx/env/USERNAME"

- name: "replace DAEMON_URL ENV files /srv/electrumxscripts/electrumx/env/DAEMON_URL with good values"
  template:
    src: DAEMON_URL_dont_touch
    dest: "/srv/electrumxscripts/electrumx/env/DAEMON_URL"

- name: "replace DB_DIRECTORY ENV files /srv/electrumxscripts/electrumx/env/DB_DIRECTORY with good values"
  template:
    src: DB_DIRECTORY_dont_touch
    dest: "/srv/electrumxscripts/electrumx/env/DB_DIRECTORY"

- name: "replace ELECTRUMX ENV files /srv/electrumxscripts/electrumx/env/ELECTRUMX with good values"
  template:
    src: ELECTRUMX_dont_touch
    dest: "/srv/electrumxscripts/electrumx/env/ELECTRUMX"

- name: "replace LOG_RUN ENV files /srv/electrumxscripts/electrumx/log/run with good values"
  template:
    src: LOG_RUN_dont_touch
    dest: "/srv/electrumxscripts/electrumx/log/run"

- name: "create symlink /srv/electrumxscripts/electrumx to /srv/electrumxservice/"
  file:
    src: /srv/electrumxscripts/electrumx
    dest:  /srv/electrumxservice/electrumx
    state: link

- name: "start svscan and get the process pid"
  shell: "cd /srv/electrumxservice/ && svscan & disown"
  args:  
    executable: /bin/bash
  register: svscan_cmd

