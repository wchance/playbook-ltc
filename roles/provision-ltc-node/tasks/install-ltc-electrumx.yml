---

- name: "create folders"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"
  loop:
    - "{{ root_dir }}/.electrumx"
    - "{{ root_dir }}/.electrumx/env"
    - "{{ root_dir }}/.electrumx/log"
    - "{{ root_dir }}/.electrumx/services"
    - "{{ electrum_data_path }}"
    - "{{ electrum_conf_path }}"
    - "{{ electrum_cert_path }}"
    - /etc/electrumx

- name: "check if ssl exist and register"
  stat:
    path: "{{ electrum_cert_path }}/cert.pem"
  register: ssl_cert
  
- name: "create ssl key if need"
  shell: |
    cd {{ electrum_cert_path }}
    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 \
      -days 999 -nodes -subj "/C=US/ST=Florida/L=Stockholm/O=.../OU=.../CN=.../emailAddress=..."
  become: yes
  when: not ssl_cert.stat.exists

- name: "clone depot git electrumx"
  ansible.builtin.git:
    repo: "https://github.com/spesmilo/electrumx.git"
    dest: "{{ root_dir }}/electrumx"
    clone: yes
    update: yes
    force: yes

- name: "execute python script"
  shell: "cd /home/{{ ansible_user }}/electrumx/; python3 setup.py install"

- name: "copy electrumx.conf to /etc/electrum/electrumx.conf"
  template:
    src: electrumx.conf
    dest: /etc/electrumx/electrumx.conf

- name: "copy electrumx.service to /etc/systemd/system/electrumx.service"
  template:
    src: electrumx.service
    dest: /etc/systemd/system/electrumx.service

- name: "configure systemd"
  ansible.builtin.file:
    src: /etc/systemd/system/electrumx.service
    dest: /etc/systemd/system/multi-user.target.wants/electrumx.service
    owner: root
    group: root
    state: link

- name: "copy {{ folder_electrumx }}/contrib/daemontools/* to {{ folder_electrumx }}script/electrumxscript/electrumx"
  shell: "cp -R {{ folder_electrumx }}/contrib/daemontools/* {{ root_dir }}/.electrumx/conf"

- name: "replace USERNAME ENV files {{ folder_electrumx }}scripts/electrumx/env/USERNAME with good values"
  template:
    src: USERNAME_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/USERNAME"

- name: "replace DAEMON_URL ENV files {{ folder_electrumx }}scripts/electrumx/env/DAEMON_URL with good values"
  template:
    src: DAEMON_URL_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/DAEMON_URL"

- name: "replace DB_DIRECTORY ENV files {{ folder_electrumx }}scripts/electrumx/env/DB_DIRECTORY with good values"
  template:
    src: DB_DIRECTORY_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/DB_DIRECTORY"

- name: "replace ELECTRUMX ENV files {{ folder_electrumx }}scripts/electrumx/env/ELECTRUMX with good values"
  template:
    src: ELECTRUMX_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/ELECTRUMX"

- name: "replace COIN ENV files {{ folder_electrumx }}scripts/electrumx/env/COIN with good values"
  template:
    src: COIN_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/COIN"

- name: "replace NET ENV files {{ folder_electrumx }}scripts/electrumx/env/COIN with good values"
  template:
    src: NET_dont_touch
    dest: "{{ root_dir }}/.electrumx/env/NET"

- name: "replace LOG_RUN ENV files {{ folder_electrumx }}scripts/electrumx/log/run with good values"
  template:
    src: LOG_RUN_dont_touch
    dest: "{{ root_dir }}/.electrumx/log/run"

- name: "create symlink {{ folder_electrumx }}scripts/electrumx to {{ folder_electrumx }}services/"
  file:
    src: "{{ root_dir }}/.electrumx/conf"
    dest: "{{ root_dir }}/.electrumx/services/electrumx"
    state: link

- name: "run electrumx service"
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: electrumx.service
  become: yes
  become_user: {{ ansible_user }}
